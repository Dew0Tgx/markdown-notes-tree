const dedent = require("dedent");

const fileContentsFunctions = require("./file-contents");

describe("file contents functions", () => {
    const endOfLine = "\n";

    describe("getNewMainReadmeFileContents", () => {
        test("it should handle current contents without a tree", () => {
            const currentContents = "some content";

            const result = fileContentsFunctions.getNewMainReadmeFileContents(
                currentContents,
                "markdownForTree",
                endOfLine
            );

            const expected =
                dedent(`some content
                
                <!-- auto-generated notes tree starts here -->
                
                markdownForTree
                
                <!-- auto-generated notes tree ends here -->`) + endOfLine;

            expect(result).toBe(expected);
        });

        test("it should handle current contents with a tree", () => {
            const currentContents =
                dedent(`some content
                
                <!-- auto-generated notes tree starts here -->
                
                markdownForTree
                
                <!-- auto-generated notes tree ends here -->
                
                content after tree`) + endOfLine;

            const result = fileContentsFunctions.getNewMainReadmeFileContents(
                currentContents,
                "markdownForTree",
                endOfLine
            );

            const expected =
                dedent(`some content
                
                <!-- auto-generated notes tree starts here -->
                
                markdownForTree
                
                <!-- auto-generated notes tree ends here -->
                
                content after tree`) + endOfLine;

            expect(result).toBe(expected);
        });

        test("it should handle current contents with a tree at the end missing the end marker (as generated by older version)", () => {
            const currentContents =
                dedent(`some content
                
                <!-- auto-generated notes tree starts here -->
                
                markdownForTree`) + endOfLine;

            const result = fileContentsFunctions.getNewMainReadmeFileContents(
                currentContents,
                "markdownForTree",
                endOfLine
            );

            const expected =
                dedent(`some content
                
                <!-- auto-generated notes tree starts here -->
                
                markdownForTree
                
                <!-- auto-generated notes tree ends here -->`) + endOfLine;

            expect(result).toBe(expected);
        });
    });

    describe("getDirectoryReadmeFileContents", () => {
        test("it should return the contents with marker, title and tree", () => {
            const result = fileContentsFunctions.getDirectoryReadmeFileContents(
                "name",
                "markdownForTree",
                endOfLine
            );

            const expected =
                dedent(`<!-- this entire file is auto-generated -->
                
                # name
                
                markdownForTree`) + endOfLine;

            expect(result).toBe(expected);
        });
    });
});
